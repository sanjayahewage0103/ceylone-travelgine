{"ast":null,"code":"var _jsxFileName = \"D:\\\\ceylone-travelgine\\\\frontend\\\\src\\\\tourGuide\\\\components\\\\RegisterFlow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport RegistrationStepA from './RegistrationStepA';\nimport RegistrationStepB from './RegistrationStepB';\nimport RegistrationStepC from './RegistrationStepC';\nimport ProgressBar from './ProgressBar';\nimport AuthService from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterFlow({\n  onSwitch,\n  onSuccess\n}) {\n  _s();\n  const [step, setStep] = useState(0);\n  const [form, setForm] = useState({\n    fullName: '',\n    email: '',\n    contact: '',\n    nic: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [guideDetails, setGuideDetails] = useState({\n    sltdaRegNum: '',\n    experienceYears: '',\n    languagesSpoken: [],\n    tourTypesOffered: [],\n    bio: '',\n    profilePic: null,\n    verificationPhoto: null,\n    sltdaLicensePic: null,\n    documentPdf: null\n  });\n  const [agree, setAgree] = useState(false);\n  const next = () => setStep(s => s + 1);\n  const back = () => setStep(s => s - 1);\n  const submit = async () => {\n    const payload = {\n      ...form,\n      guideDetails: {\n        ...guideDetails,\n        languagesSpoken: guideDetails.languagesSpoken,\n        tourTypesOffered: guideDetails.tourTypesOffered,\n        profilePicUrl: guideDetails.profilePic,\n        verificationPhotoUrl: guideDetails.verificationPhoto,\n        sltdaLicensePicUrl: guideDetails.sltdaLicensePic,\n        documentPdfUrl: guideDetails.documentPdf\n      }\n    };\n    await AuthService.registerGuide(payload);\n    onSuccess();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n      step: step\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), step === 0 && /*#__PURE__*/_jsxDEV(RegistrationStepA, {\n      form: form,\n      setForm: setForm,\n      next: next\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 22\n    }, this), step === 1 && /*#__PURE__*/_jsxDEV(RegistrationStepB, {\n      guideDetails: guideDetails,\n      setGuideDetails: setGuideDetails,\n      next: next,\n      back: back\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 22\n    }, this), step === 2 && /*#__PURE__*/_jsxDEV(RegistrationStepC, {\n      agree: agree,\n      setAgree: setAgree,\n      submit: submit,\n      back: back\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisterFlow, \"+EUJLd0BPeyujyQcgeriNCA3ZuM=\");\n_c = RegisterFlow;\nexport default RegisterFlow;\nvar _c;\n$RefreshReg$(_c, \"RegisterFlow\");","map":{"version":3,"names":["React","useState","RegistrationStepA","RegistrationStepB","RegistrationStepC","ProgressBar","AuthService","jsxDEV","_jsxDEV","RegisterFlow","onSwitch","onSuccess","_s","step","setStep","form","setForm","fullName","email","contact","nic","password","confirmPassword","guideDetails","setGuideDetails","sltdaRegNum","experienceYears","languagesSpoken","tourTypesOffered","bio","profilePic","verificationPhoto","sltdaLicensePic","documentPdf","agree","setAgree","next","s","back","submit","payload","profilePicUrl","verificationPhotoUrl","sltdaLicensePicUrl","documentPdfUrl","registerGuide","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ceylone-travelgine/frontend/src/tourGuide/components/RegisterFlow.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport RegistrationStepA from './RegistrationStepA';\r\nimport RegistrationStepB from './RegistrationStepB';\r\nimport RegistrationStepC from './RegistrationStepC';\r\nimport ProgressBar from './ProgressBar';\r\nimport AuthService from '../services/authService';\r\n\r\nfunction RegisterFlow({ onSwitch, onSuccess }) {\r\n  const [step, setStep] = useState(0);\r\n  const [form, setForm] = useState({\r\n    fullName: '', email: '', contact: '', nic: '', password: '', confirmPassword: ''\r\n  });\r\n  const [guideDetails, setGuideDetails] = useState({\r\n    sltdaRegNum: '', experienceYears: '', languagesSpoken: [], tourTypesOffered: [], bio: '',\r\n    profilePic: null, verificationPhoto: null, sltdaLicensePic: null, documentPdf: null\r\n  });\r\n  const [agree, setAgree] = useState(false);\r\n\r\n  const next = () => setStep(s => s + 1);\r\n  const back = () => setStep(s => s - 1);\r\n\r\n  const submit = async () => {\r\n    const payload = {\r\n      ...form,\r\n      guideDetails: {\r\n        ...guideDetails,\r\n        languagesSpoken: guideDetails.languagesSpoken,\r\n        tourTypesOffered: guideDetails.tourTypesOffered,\r\n        profilePicUrl: guideDetails.profilePic,\r\n        verificationPhotoUrl: guideDetails.verificationPhoto,\r\n        sltdaLicensePicUrl: guideDetails.sltdaLicensePic,\r\n        documentPdfUrl: guideDetails.documentPdf\r\n      }\r\n    };\r\n    await AuthService.registerGuide(payload);\r\n    onSuccess();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ProgressBar step={step} />\r\n      {step === 0 && <RegistrationStepA form={form} setForm={setForm} next={next} />}\r\n      {step === 1 && <RegistrationStepB guideDetails={guideDetails} setGuideDetails={setGuideDetails} next={next} back={back} />}\r\n      {step === 2 && <RegistrationStepC agree={agree} setAgree={setAgree} submit={submit} back={back} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterFlow;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,YAAYA,CAAC;EAAEC,QAAQ;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC;IAC/BgB,QAAQ,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,OAAO,EAAE,EAAE;IAAEC,GAAG,EAAE,EAAE;IAAEC,QAAQ,EAAE,EAAE;IAAEC,eAAe,EAAE;EAChF,CAAC,CAAC;EACF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC;IAC/CwB,WAAW,EAAE,EAAE;IAAEC,eAAe,EAAE,EAAE;IAAEC,eAAe,EAAE,EAAE;IAAEC,gBAAgB,EAAE,EAAE;IAAEC,GAAG,EAAE,EAAE;IACxFC,UAAU,EAAE,IAAI;IAAEC,iBAAiB,EAAE,IAAI;IAAEC,eAAe,EAAE,IAAI;IAAEC,WAAW,EAAE;EACjF,CAAC,CAAC;EACF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EAEzC,MAAMmC,IAAI,GAAGA,CAAA,KAAMtB,OAAO,CAACuB,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC;EACtC,MAAMC,IAAI,GAAGA,CAAA,KAAMxB,OAAO,CAACuB,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC;EAEtC,MAAME,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,MAAMC,OAAO,GAAG;MACd,GAAGzB,IAAI;MACPQ,YAAY,EAAE;QACZ,GAAGA,YAAY;QACfI,eAAe,EAAEJ,YAAY,CAACI,eAAe;QAC7CC,gBAAgB,EAAEL,YAAY,CAACK,gBAAgB;QAC/Ca,aAAa,EAAElB,YAAY,CAACO,UAAU;QACtCY,oBAAoB,EAAEnB,YAAY,CAACQ,iBAAiB;QACpDY,kBAAkB,EAAEpB,YAAY,CAACS,eAAe;QAChDY,cAAc,EAAErB,YAAY,CAACU;MAC/B;IACF,CAAC;IACD,MAAM3B,WAAW,CAACuC,aAAa,CAACL,OAAO,CAAC;IACxC7B,SAAS,CAAC,CAAC;EACb,CAAC;EAED,oBACEH,OAAA;IAAAsC,QAAA,gBACEtC,OAAA,CAACH,WAAW;MAACQ,IAAI,EAAEA;IAAK;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC1BrC,IAAI,KAAK,CAAC,iBAAIL,OAAA,CAACN,iBAAiB;MAACa,IAAI,EAAEA,IAAK;MAACC,OAAO,EAAEA,OAAQ;MAACoB,IAAI,EAAEA;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC7ErC,IAAI,KAAK,CAAC,iBAAIL,OAAA,CAACL,iBAAiB;MAACoB,YAAY,EAAEA,YAAa;MAACC,eAAe,EAAEA,eAAgB;MAACY,IAAI,EAAEA,IAAK;MAACE,IAAI,EAAEA;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACzHrC,IAAI,KAAK,CAAC,iBAAIL,OAAA,CAACJ,iBAAiB;MAAC8B,KAAK,EAAEA,KAAM;MAACC,QAAQ,EAAEA,QAAS;MAACI,MAAM,EAAEA,MAAO;MAACD,IAAI,EAAEA;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/F,CAAC;AAEV;AAACtC,EAAA,CAvCQH,YAAY;AAAA0C,EAAA,GAAZ1C,YAAY;AAyCrB,eAAeA,YAAY;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}