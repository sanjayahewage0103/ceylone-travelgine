{"ast":null,"code":"class AuthService {\n  async login(email, password) {\n    const res = await fetch('/api/auth/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (!res.ok) throw new Error('Invalid credentials');\n    return await res.json();\n  }\n  async registerGuide(formData) {\n    const data = new FormData();\n    data.append('role', 'guide');\n    Object.entries(formData).forEach(([key, value]) => {\n      if (key === 'guideDetails') {\n        Object.entries(value).forEach(([k, v]) => {\n          if (Array.isArray(v)) {\n            v.forEach(val => data.append(`guideDetails[${k}][]`, val));\n          } else {\n            data.append(`guideDetails[${k}]`, v);\n          }\n        });\n      } else {\n        data.append(key, value);\n      }\n    });\n    const res = await fetch('/api/auth/register', {\n      method: 'POST',\n      body: data\n    });\n    if (!res.ok) throw new Error('Registration failed');\n    return await res.json();\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["AuthService","login","email","password","res","fetch","method","headers","body","JSON","stringify","ok","Error","json","registerGuide","formData","data","FormData","append","Object","entries","forEach","key","value","k","v","Array","isArray","val"],"sources":["D:/ceylone-travelgine/frontend/src/tourGuide/services/authService.js"],"sourcesContent":["class AuthService {\r\n  async login(email, password) {\r\n    const res = await fetch('/api/auth/login', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ email, password })\r\n    });\r\n    if (!res.ok) throw new Error('Invalid credentials');\r\n    return await res.json();\r\n  }\r\n\r\n  async registerGuide(formData) {\r\n    const data = new FormData();\r\n    data.append('role', 'guide');\r\n    Object.entries(formData).forEach(([key, value]) => {\r\n      if (key === 'guideDetails') {\r\n        Object.entries(value).forEach(([k, v]) => {\r\n          if (Array.isArray(v)) {\r\n            v.forEach(val => data.append(`guideDetails[${k}][]`, val));\r\n          } else {\r\n            data.append(`guideDetails[${k}]`, v);\r\n          }\r\n        });\r\n      } else {\r\n        data.append(key, value);\r\n      }\r\n    });\r\n    const res = await fetch('/api/auth/register', {\r\n      method: 'POST',\r\n      body: data\r\n    });\r\n    if (!res.ok) throw new Error('Registration failed');\r\n    return await res.json();\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n"],"mappings":"AAAA,MAAMA,WAAW,CAAC;EAChB,MAAMC,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAE;IAC3B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAE;MACzCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,KAAK;QAAEC;MAAS,CAAC;IAC1C,CAAC,CAAC;IACF,IAAI,CAACC,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;IACnD,OAAO,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;EACzB;EAEA,MAAMC,aAAaA,CAACC,QAAQ,EAAE;IAC5B,MAAMC,IAAI,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC3BD,IAAI,CAACE,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC;IAC5BC,MAAM,CAACC,OAAO,CAACL,QAAQ,CAAC,CAACM,OAAO,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAK;MACjD,IAAID,GAAG,KAAK,cAAc,EAAE;QAC1BH,MAAM,CAACC,OAAO,CAACG,KAAK,CAAC,CAACF,OAAO,CAAC,CAAC,CAACG,CAAC,EAAEC,CAAC,CAAC,KAAK;UACxC,IAAIC,KAAK,CAACC,OAAO,CAACF,CAAC,CAAC,EAAE;YACpBA,CAAC,CAACJ,OAAO,CAACO,GAAG,IAAIZ,IAAI,CAACE,MAAM,CAAC,gBAAgBM,CAAC,KAAK,EAAEI,GAAG,CAAC,CAAC;UAC5D,CAAC,MAAM;YACLZ,IAAI,CAACE,MAAM,CAAC,gBAAgBM,CAAC,GAAG,EAAEC,CAAC,CAAC;UACtC;QACF,CAAC,CAAC;MACJ,CAAC,MAAM;QACLT,IAAI,CAACE,MAAM,CAACI,GAAG,EAAEC,KAAK,CAAC;MACzB;IACF,CAAC,CAAC;IACF,MAAMnB,GAAG,GAAG,MAAMC,KAAK,CAAC,oBAAoB,EAAE;MAC5CC,MAAM,EAAE,MAAM;MACdE,IAAI,EAAEQ;IACR,CAAC,CAAC;IACF,IAAI,CAACZ,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;IACnD,OAAO,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;EACzB;AACF;AAEA,eAAe,IAAIb,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}